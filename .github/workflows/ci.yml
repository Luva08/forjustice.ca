name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  REGISTRY: gcr.io
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  # Lint and Test
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, web, worker]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service }}/package.json'
      
      - name: Install dependencies
        working-directory: ./${{ matrix.service }}
        run: npm ci || npm install
      
      - name: Lint
        working-directory: ./${{ matrix.service }}
        run: npm run lint || echo "No lint script found"
        continue-on-error: true
      
      - name: Test
        working-directory: ./${{ matrix.service }}
        run: npm test || echo "No test script found"
        continue-on-error: true
      
      - name: Build
        working-directory: ./${{ matrix.service }}
        run: npm run build || echo "No build needed"

  # Build Docker Images
  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [backend, web, worker]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        working-directory: ./${{ matrix.service }}
        run: |
          docker build -t forjustice-${{ matrix.service }}:${{ github.sha }} .
          docker tag forjustice-${{ matrix.service }}:${{ github.sha }} forjustice-${{ matrix.service }}:latest
      
      - name: Test Docker image
        run: |
          docker run --rm forjustice-${{ matrix.service }}:${{ github.sha }} node --version

  # Deploy to Cloud Run (uncomment when ready)
  # deploy:
  #   needs: build-docker
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   strategy:
  #     matrix:
  #       service: [backend, web, worker]
  #   
  #   steps:
  #     - uses: actions/checkout@v4
  #     
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: ${{ secrets.GCP_SA_KEY }}
  #     
  #     - name: Set up Cloud SDK
  #       uses: google-github-actions/setup-gcloud@v2
  #     
  #     - name: Configure Docker for GCR
  #       run: gcloud auth configure-docker
  #     
  #     - name: Build and Push to GCR
  #       working-directory: ./${{ matrix.service }}
  #       run: |
  #         docker build -t ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/forjustice-${{ matrix.service }}:${{ github.sha }} .
  #         docker push ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/forjustice-${{ matrix.service }}:${{ github.sha }}
  #     
  #     - name: Deploy to Cloud Run
  #       run: |
  #         gcloud run deploy forjustice-${{ matrix.service }} \
  #           --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/forjustice-${{ matrix.service }}:${{ github.sha }} \
  #           --platform managed \
  #           --region us-central1 \
  #           --allow-unauthenticated \
  #           --set-env-vars="NODE_ENV=production"

